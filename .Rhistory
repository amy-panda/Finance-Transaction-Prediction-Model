training_data %>%
mutate(prediction=predict(model2,data=training_data)) %>%
ggplot()+
geom_line(mapping=aes(x=date,y=monthly_amount),color="grey")+
geom_line(mapping=aes(x=date,y=prediction),color="blue")
prediction2 <- model2 %>% predict(test_data)
test_data %>%
mutate(prediction=prediction2)
#calculate RMSE,MAE and MAPE
RMSE(prediction2,test_data$monthly_amount)
MAE(prediction2,test_data$monthly_amount)
mean(abs((test_data$monthly_amount-prediction2)/test_data$monthly_amount)) * 100
# calculate the predicted monthly_amount in Dec 2016
mth_dec16 <- model2$coefficients[1]+model2$coefficients[12]+model2$coefficients[13]*48*48
mth_dec16
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount))+
geom_point(mapping=aes(x=as.Date("2016-12-01"),y=mth_dec16),color="red")
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=id,y=monthly_amount))+
scale_x_continuous(breaks = seq(from = 0, to = 48, by = 6))
output=data.frame()
train_test_split <- c(1:36)
for (i in seq(10)){
for (j in seq(10)){
loc_ind <- ave_month %>%
filter(location==i & industry==j) %>%
data.frame() %>%
mutate(month=as.factor(format(date,format="%m"))) %>%
mutate(id=row_number())
if (length(unique(loc_ind$date))>=36){
training_data <- loc_ind[train_test_split,]
test_data <- loc_ind[-train_test_split,]
model <- lm (monthly_amount ~ month + I(id^2),
data=training_data)
a=summary(model)$adj.r.squared
# loc_ind$prediction = predict(model, loc_ind)
prediction2=predict(model,test_data)
b=RMSE(prediction2,test_data$monthly_amount)
p=model$coefficients[1]+model$coefficients[12]+model$coefficients[13]*48*48
combined=c(i,j,a,b,p)
output=rbind(output,combined)
colnames(output) <- c("location","industry","Adjsuted R^2","RMSE","predict_Dec16")
}
}
}
output
loc1_ind1 <- ave_month %>%
filter(location==1 & industry==1)
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 5. Monthly amount for customers in industry 1 and location 1",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
train_test_split <- c(1:36)
training_data <- loc1_ind1[train_test_split,] #this is used to build the training model
test_data <- loc1_ind1[-train_test_split,] #this is used to test the final model only
# Fit the model1 (without polynomials)
model1 <- lm (monthly_amount ~ month + id,
data=training_data)
summary(model1)
library(tidyverse)
library(scales)
library(caret)
# Import the dataset ------------------------------------------------------
transactions <- read_csv('data/transactions.csv')
# Look at the data structure ----------------------------------------------
glimpse(transactions)
# Convert the date type ---------------------------------------------------
transactions$date <- as.Date(transactions$date,format="%d/%m/%Y")
transactions$industry <- as.factor(transactions$industry)
transactions$location <- as.factor(transactions$location)
# Check the data type again -----------------------------------------------
glimpse(transactions)
# Look at the first few rows ----------------------------------------------
head(transactions)
# Check the missing values for each variable ------------------------------
cbind(
lapply(
lapply(transactions, is.na),sum)
)
# Look at the statistical description -------------------------------------
summary(transactions)
ave_month <-
transactions %>%
group_by(date,industry,location) %>%
summarise(monthly_amount=mean(monthly_amount))
ave_month
# Create a line plot of the variable monthly_amount for industry = 1 and location = 1
loc1_ind1 <- ave_month %>%
filter(location==1 & industry==1)
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 5. Monthly amount for customers in industry 1 and location 1",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
loc1_ind1 <-
loc1_ind1 %>%
data.frame() %>%
mutate(month=as.factor(format(date,format="%m"))) %>%
mutate(id=row_number())
loc1_ind1
train_test_split <- c(1:36)
training_data <- loc1_ind1[train_test_split,] #this is used to build the training model
test_data <- loc1_ind1[-train_test_split,] #this is used to test the final model only
# Fit the model1 (without polynomials)
model1 <- lm (monthly_amount ~ month + id,
data=training_data)
summary(model1)
training_data %>%
mutate(prediction=predict(model1,data=training_data)) %>%
ggplot()+
geom_line(mapping=aes(x=date,y=monthly_amount),color="grey")+
geom_line(mapping=aes(x=date,y=prediction),color="blue")
prediction1 <- model1 %>% predict(test_data)
model3 <- lm (monthly_amount ~ month + poly(id,3),
data=training_data)
summary(model3)
model3 <- lm (monthly_amount ~ month + poly(id,2),
data=training_data)
summary(model3)
model4 <- lm (monthly_amount ~ month + id + I(id^2),
data=training_data)
summary(model4)
model2 <- lm (monthly_amount ~ month + I(id^2),
data=training_data)
summary(model2)
model1 <- lm (monthly_amount ~ month + id,
data=training_data)
summary(model1)
training_data %>%
mutate(prediction=predict(model1,data=training_data)) %>%
ggplot()+
geom_line(mapping=aes(x=date,y=monthly_amount),color="grey")+
geom_line(mapping=aes(x=date,y=prediction),color="blue")
prediction1 <- model1 %>% predict(test_data)
model2 <- lm (monthly_amount ~ month + I(id^2),
data=training_data)
summary(model2)
summary(model2)$adj.r.squared
training_data %>%
mutate(prediction=predict(model2,data=training_data)) %>%
ggplot()+
geom_line(mapping=aes(x=date,y=monthly_amount),color="grey")+
geom_line(mapping=aes(x=date,y=prediction),color="blue")
model1 <- lm (monthly_amount ~ month + id,
data=training_data)
summary(model1)
model2 <- lm (monthly_amount ~ month + I(id^2),
data=training_data)
summary(model2)
summary(model2)$adj.r.squared
training_data %>%
mutate(prediction=predict(model2,data=training_data)) %>%
ggplot()+
geom_line(mapping=aes(x=date,y=monthly_amount),color="grey")+
geom_line(mapping=aes(x=date,y=prediction),color="blue")
mth_dec16 <- model2$coefficients[1]+model2$coefficients[12]+model2$coefficients[13]*48*48
mth_dec16
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount))+
geom_point(mapping=aes(x=as.Date("2016-12-01"),y=mth_dec16),color="red")
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
geom_point(mapping=aes(x=as.Date("2016-12-01"),y=mth_dec16),color="red",size=2)+
labs(caption ="Figure 6. Monthly amount for customers in industry 1 and location 1",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
geom_point(mapping=aes(x=as.Date("2016-12-01"),y=mth_dec16),color="red",size=2)+
labs(caption ="Figure 6. Predicted amount for December 2016 (industry=1 and location=1)",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
geom_point(mapping=aes(x=as.Date("2016-12-01"),y=mth_dec16),color="red",size=2,shape=2)+
labs(caption ="Figure 6. Predicted amount for December 2016 (industry=1 and location=1)",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
geom_point(mapping=aes(x=as.Date("2016-12-01"),y=mth_dec16),color="red",size=2,shape=1)+
labs(caption ="Figure 6. Predicted amount for December 2016 (industry=1 and location=1)",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
geom_point(mapping=aes(x=as.Date("2016-12-01"),y=mth_dec16),color="red",size=3)+
labs(caption ="Figure 6. Predicted amount for December 2016 (industry=1 and location=1)",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
prediction2 <- model2 %>% predict(test_data)
test_data %>%
mutate(prediction=prediction2)
prediction2 <- model2 %>% predict(test_data)
test_data %>%
mutate(prediction=prediction2,difference=prediction2-monthly_amount)
# calculate the predicted monthly_amount in Dec 2016
mth_dec16 <- model2$coefficients[1]+model2$coefficients[12]+model2$coefficients[13]*48*48
mth_dec16
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
geom_point(mapping=aes(x=as.Date("2016-12-01"),y=mth_dec16),color="red",size=3)+
labs(caption ="Figure 6. Predicted amount for December 2016 (industry=1 and location=1)",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
a <- c(as.Date("2016-12-01"),"1","1","02",48,mth_dec16)
a <- c("2016-12-01","1","1","02",48,mth_dec16)
a <- c("2016-12-01","1","1","02",48,mth_dec16)
b <- c("date","industry","location","month","id","prediction")
rbind(a,b)
a <- c("2016-12-01","1","1","02",48,mth_dec16)
b <- c("date","industry","location","month","id","prediction")
as.data.frame(rbind(b,a))
a <- as.data.frame(c("2016-12-01","1","1","02",48,mth_dec16))
colnames(a) <- c("date","industry","location","month","id","prediction")
a <- as.data.frame(c("2016-12-01","1","1","02",48,mth_dec16))
colnames(a) <- c("date","industry","location","month","id","prediction")
a <- as.data.frame(c("2016-12-01","1","1","02","48",mth_dec16))
colnames(a) <- c("date","industry","location","month","id","prediction")
View(a)
df<-data.frame("hi","bye")
names(df)<-c("hello","goodbye")
de<-data.frame("hola","ciao")
names(de)<-c("hello","goodbye")
newdf <- rbind(df, de)
View(newdf)
View(de)
df<-data.frame("hi","bye")
names(df)<-c("hello","goodbye")
View(df)
a <- data.frame("2016-12-01","1","1","02",48,mth_dec16)
names(a) <- c("date","industry","location","month","id","prediction")
View(a)
a
a <- data.frame("2016-12-01","1","1","02",48,mth_dec16)
names(a) <- c("date","industry","location","month","id","prediction")
colnames(a) <- 48
a
a <- data.frame("2016-12-01","1","1","02",48,mth_dec16)
names(a) <- c("date","industry","location","month","id","prediction")
rownames(a) <- 48
a
a
mth_dec16 <- model2$coefficients[1]+model2$coefficients[12]+model2$coefficients[13]*48*48
mth_dec16
Dec_16 <- data.frame("2016-12-01","1","1","02",48,mth_dec16)
names(Dec_16) <- c("date","industry","location","month","id","prediction")
rownames(Dec_16) <- 48
Dec_16
prediction2 <- model2 %>% predict(test_data)
test_data %>%
mutate(prediction=prediction2,difference=prediction2-monthly_amount)
RMSE(prediction2,test_data$monthly_amount)
MAE(prediction2,test_data$monthly_amount)
mean(abs((test_data$monthly_amount-prediction2)/test_data$monthly_amount)) * 100
model1 <- lm (monthly_amount ~ month + id,
data=training_data)
summary(model1)
training_data %>%
mutate(prediction=predict(model1,data=training_data)) %>%
ggplot()+
geom_line(mapping=aes(x=date,y=monthly_amount),color="grey")+
geom_line(mapping=aes(x=date,y=prediction),color="blue")
prediction1 <- model1 %>% predict(test_data)
#calculate RMSE,MAE and MAPE
RMSE(prediction1,test_data$monthly_amount)
MAE(prediction1,test_data$monthly_amount)
mean(abs((test_data$monthly_amount-prediction1)/test_data$monthly_amount)) * 100
MAE(prediction2,test_data$monthly_amount)
MAE(prediction1,test_data$monthly_amount)
MAE(prediction2,test_data$monthly_amount)
output=data.frame()
train_test_split <- c(1:36)
for (i in seq(10)){
for (j in seq(10)){
loc_ind <- ave_month %>%
filter(location==i & industry==j) %>%
data.frame() %>%
mutate(month=as.factor(format(date,format="%m"))) %>%
mutate(id=row_number())
if (length(unique(loc_ind$date))>=36){
training_data <- loc_ind[train_test_split,]
test_data <- loc_ind[-train_test_split,]
model <- lm (monthly_amount ~ month + I(id^2),
data=training_data)
a=summary(model)$adj.r.squared
prediction2=predict(model,test_data)
b=MAE(prediction2,test_data$monthly_amount)
p=model$coefficients[1]+model$coefficients[12]+model$coefficients[13]*48*48
combined=c(i,j,a,b,p)
output=rbind(output,combined)
colnames(output) <- c("location","industry","Adjsuted R^2","MAE","predict_Dec16")
}
}
}
output
output[output$`Adjsuted R^2`=min(output$`Adjsuted R^2`)]
output[output$`Adjsuted R^2`==min(output$`Adjsuted R^2`)]
str(output)
?arrange
arrange(output$`Adjsuted R^2`)
output[order(output$`Adjsuted R^2`)]
output=data.frame()
train_test_split <- c(1:36)
for (i in seq(10)){
for (j in seq(10)){
loc_ind <- ave_month %>%
filter(location==i & industry==j) %>%
data.frame() %>%
mutate(month=as.factor(format(date,format="%m"))) %>%
mutate(id=row_number())
if (length(unique(loc_ind$date))>=36){
training_data <- loc_ind[train_test_split,]
test_data <- loc_ind[-train_test_split,]
model <- lm (monthly_amount ~ month + I(id^2),
data=training_data)
a=summary(model)$adj.r.squared
prediction2=predict(model,test_data)
b=MAE(prediction2,test_data$monthly_amount)
p=model$coefficients[1]+model$coefficients[12]+model$coefficients[13]*48*48
combined=c(i,j,a,b,p)
output=rbind(output,combined)
colnames(output) <- c("location","industry","Adjusted R^2","MAE","predict_Dec16")
}
}
}
output
output[order(output$`Adjusted R^2`),]
output[order(output$MAE,decreasing = True),]
?order
output[order(-output$MAE),]
loc1_ind1 <- ave_month %>%
filter(location==1 & industry==6)
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 5. Monthly amount for customers in industry 1 and location 1",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
loc1_ind1 <- ave_month %>%
filter(location==8 & industry==10)
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 5. Monthly amount for customers in industry 1 and location 1",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
View(loc1_ind1)
loc1_ind1 <- ave_month %>%
filter(location==1 & industry==5)
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 5. Monthly amount for customers in industry 1 and location 1",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
loc1_ind1 <- ave_month %>%
filter(location==8 & industry==3)
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 5. Monthly amount for customers in industry 1 and location 1",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
loc1_ind1 <- ave_month %>%
filter(location==8 & industry==10)
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 5. Monthly amount for customers in industry 1 and location 1",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
loc1_ind1 <- ave_month %>%
filter(location==8 & industry==10)
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 5. Monthly amount for customers in industry 1 and location 1",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
loc1_ind1 <- ave_month %>%
filter(location==1 & industry==1)
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 5. Monthly amount for customers in industry 1 and location 1",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
loc1_ind1 <-
loc1_ind1 %>%
data.frame() %>%
mutate(month=as.factor(format(date,format="%m"))) %>%
mutate(id=row_number())
loc1_ind1
output[order(output$`Adjusted R^2`),][1:2,]
output[order(-output$MAE),][1:2,]
loc5_ind3 <- ave_month %>%
filter(location==5 & industry==3)
ggplot(loc1_ind1)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 7. Monthly amount for customers in industry 5 and location 3",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
loc5_ind3 <- ave_month %>%
filter(location==5 & industry==3)
ggplot(loc5_ind3)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 7. Monthly amount for customers in industry 5 and location 3",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
loc8_ind3 <- ave_month %>%
filter(location==8 & industry==3)
ggplot(loc8_ind3)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 7. Monthly amount for customers in industry 5 and location 3",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
loc8_ind3 <- ave_month %>%
filter(location==8 & industry==3)
ggplot(loc8_ind3)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 7. Monthly amount for customers in industry 8 and location 3",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
loc5_ind3 <- ave_month %>%
filter(location==5 & industry==3)
ggplot(loc5_ind3)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 7. Monthly amount for customers in industry 5 and location 3",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
loc8_ind3 <- ave_month %>%
filter(location==8 & industry==3)
ggplot(loc8_ind3)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 8. Monthly amount for customers in industry 8 and location 3",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
loc5_ind3 <- ave_month %>%
filter(location==5 & industry==3)
ggplot(loc5_ind3)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 7. Monthly amount for customers in location 5 and industry 3",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
loc8_ind3 <- ave_month %>%
filter(location==8 & industry==3)
ggplot(loc8_ind3)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 8. Monthly amount for customers in location 8 and industry 3",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
View(loc8_ind3)
loc5_ind3 <- ave_month %>%
filter(location==5 & industry==3)
ggplot(loc5_ind3)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 7. Monthly amount for customers in location 5 and industry 3",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
loc8_ind3 <- ave_month %>%
filter(location==8 & industry==3)
ggplot(loc8_ind3)+
geom_line(mapping=aes(x=date,y=monthly_amount),size=1)+
labs(caption ="Figure 8. Monthly amount for customers in location 8 and industry 3",
y="Monthly amount",
x=" ")+
theme_bw()+
theme(plot.caption = element_text(size=11,hjust=0.5,face="bold"))
